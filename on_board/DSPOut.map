******************************************************************************
              TMS320C55x Linker Unix v4.4.1                    
******************************************************************************
>> Linked Thu Oct 17 16:37:15 2024

OUTPUT FILE NAME:   <DSPFuzz.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 00015707


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  SPRAM                 000000c0   00000020  00000000  00000020  RWIX
  DARAM0                00000100   00003f00  00002600  00001900  RWIX
  DARAM1                00004000   00004000  00000000  00004000  RW X
  DARAM2                00008000   00008000  00006240  00001dc0  RW X
  SARAM01               00010000   00008000  000059de  00002622  RW X
  SARAM2                00018000   00004000  00000000  00004000  RWIX
  SARAM3                0001c000   00004000  00000000  00004000  RWIX
  SARAM4                00020000   00004000  00000000  00004000  RWIX
  SARAM5                00024000   0000c000  000007c4  0000b83c  RWIX
  SARAM6                00030000   00004000  00000000  00004000  RWIX
  SARAM7                00034000   00004000  00000000  00004000  RW X
  SARAM8                00038000   00004000  00000518  00003ae8  RWIX
  SARAM9                0003c000   00008000  00000030  00007fd0  RWIX
  SARAM10               00044000   00004000  00000100  00003f00  RW X
  SARAM11               00048000   00008000  00000f00  00007100  RWIX
  CE1                   00400000   00400000  00000000  00400000  RWIX
  CE2                   00800000   00400000  00000000  00400000  RWIX
  CE3                   00c00000   003f8000  00000000  003f8000  RWIX
  PDROM                 00ff8000   00007f00  00000000  00007f00  RWIX
  VECS                  00ffff00   00000100  00000000  00000100  RWIX


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.stack       0   [ 00000100 ]  00000080          *   00001000   UNINITIALIZED
                 [ 00000100 ]  00000080          *   00001000   --HOLE--

.sysstack 
*            0   [ 00002100 ]  00001080          *   00000200   UNINITIALIZED
                 [ 00002100 ]  00001080          *   00000200   --HOLE--

vectors      0     00002500  [ 00001280 ] 00000200          *   NOLOAD SECTION
                   00002500  [ 00001280 ] 00000100          *   C55CSL_3.lib : vectors.obj (vectors)
                   00002600  [ 00001300 ] 00000100          *   rts55x.lib : vectors.obj (vectors)

.sysmem      0   [ 00008000 ]  00004000          *   00003000   UNINITIALIZED
                 [ 00008000 ]  00004000          *   00003000   --HOLE--

.cio         0   [ 0000e000 ]  00007000          *   00000120   UNINITIALIZED
                 [ 0000e000 ]  00007000          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.text        0     00010000  [ 00008000 ] 0000585e          *   
                   00010000  [ 00008000 ] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   000115a4  [ 00008ad2 ] 0000093f          *   fuzz.obj (.text)
                   00011ee3  [ 00008f71+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   00012426  [ 00009213 ] 00000528          *              : trgdrv.obj (.text)
                   0001294e  [ 000094a7 ] 00000508          *   C55CSL_3.lib : csl_intc.obj (.text)
                   00012e56  [ 0000972b ] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0001330b  [ 00009985+] 000003cc          *              : divd.obj (.text)
                   000136d7  [ 00009b6b+] 00000396          *   fuzz.obj (.text:retain)
                   00013a6d  [ 00009d36+] 000002eb          *   C55CSL_3.lib : csl_gpt.obj (.text)
                   00013d58  [ 00009eac ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00013fd7  [ 00009feb+] 0000025e          *              : llmpy.obj (.text)
                   00014235  [ 0000a11a+] 0000025a          *              : addd.obj (.text)
                   0001448f  [ 0000a247+] 000001ea          *              : cmpd.obj (.text)
                   00014679  [ 0000a33c+] 00000163          *              : fputs.obj (.text)
                   000147dc  [ 0000a3ee ] 0000014c          *              : mpyd.obj (.text)
                   00014928  [ 0000a494 ] 000000e6          *              : setvbuf.obj (.text)
                   00014a0e  [ 0000a507 ] 000000dd          *              : _io_perm.obj (.text)
                   00014aeb  [ 0000a575+] 000000c2          *              : fflush.obj (.text)
                   00014bad  [ 0000a5d6+] 000000ba          *              : trgmsg.obj (.text:CIO_breakpoint)
                   00014c67  [ 0000a633+] 000000a6          *              : fputc.obj (.text)
                   00014d0d  [ 0000a686+] 000000a3          *   coverage.obj (.text)
                   00014db0  [ 0000a6d8 ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   00014e51  [ 0000a728+] 0000008c          *   C55CSL_3.lib : csl_irqplug.obj (.text)
                   00014edd  [ 0000a76e+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   00014f5a  [ 0000a7ad ] 0000007b          *              : fclose.obj (.text)
                   00014fd5  [ 0000a7ea+] 00000076          *              : frcmpyd.obj (.text)
                   0001504b  [ 0000a825+] 00000073          *              : frcmpyd_div.obj (.text)
                   000150be  [ 0000a85f ] 00000072          *              : remul.obj (.text)
                   00015130  [ 0000a898 ] 0000006f          *              : fixdli.obj (.text)
                   0001519f  [ 0000a8cf+] 0000006d          *   C55CSL_3.lib : vectors.obj (.text)
                   0001520c  [ 0000a906 ] 0000006d          *   rts55x.lib : trgmsg.obj (.text)
                   00015279  [ 0000a93c+] 0000006b          *              : fseek.obj (.text)
                   000152e4  [ 0000a972 ] 00000067          *              : fltlid.obj (.text)
                   0001534b  [ 0000a9a5+] 00000060          *              : rand.obj (.text)
                   000153ab  [ 0000a9d5+] 0000005c          *              : atoi.obj (.text)
                   00015407  [ 0000aa03+] 00000050          *              : printf.obj (.text)
                   00015457  [ 0000aa2b+] 0000004d          *              : autoinit.obj (.text)
                   000154a4  [ 0000aa52 ] 0000004b          *              : args_main.obj (.text)
                   000154ef  [ 0000aa77+] 0000004b          *              : remli.obj (.text)
                   0001553a  [ 0000aa9d ] 0000004a          *              : fprintf.obj (.text)
                   00015584  [ 0000aac2 ] 00000048          *              : divli.obj (.text)
                   000155cc  [ 0000aae6 ] 00000045          *              : setjmp.obj (.text)
                   00015611  [ 0000ab08+] 0000003f          *              : memcpy.obj (.text)
                   00015650  [ 0000ab28 ] 0000003e          *              : exit.obj (.text)
                   0001568e  [ 0000ab47 ] 0000003d          *              : assert.obj (.text)
                   000156cb  [ 0000ab65+] 0000003c          *              : idiv.obj (.text)
                   00015707  [ 0000ab83+] 00000034          *              : boot.obj (.text)
                   0001573b  [ 0000ab9d+] 0000002a          *              : fixdi.obj (.text)
                   00015765  [ 0000abb2+] 0000002a          *              : udiv.obj (.text)
                   0001578f  [ 0000abc7+] 00000023          *              : memccpy.obj (.text)
                   000157b2  [ 0000abd9 ] 0000001a          *              : isinf.obj (.text)
                   000157cc  [ 0000abe6 ] 00000017          *              : time.obj (.text)
                   000157e3  [ 0000abf1+] 00000014          *              : subd.obj (.text)
                   000157f7  [ 0000abfb+] 00000013          *              : lmpy.obj (.text)
                   0001580a  [ 0000ac05 ] 00000012          *              : _lock.obj (.text)
                   0001581c  [ 0000ac0e ] 00000011          *              : memset.obj (.text)
                   0001582d  [ 0000ac16+] 00000010          *              : negd.obj (.text)
                   0001583d  [ 0000ac1e+] 0000000d          *   new_test_fuzz.obj (.text)
                   0001584a  [ 0000ac25 ] 0000000a          *   rts55x.lib : remove.obj (.text)
                   00015854  [ 0000ac2a ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   0001585b  [ 0000ac2d+] 00000002          *              : vectors.obj (.text)
                   0001585d  [ 0000ac2e ] 00000001          *   --HOLE-- [fill = 20]

.cinit       0   [ 0001585e ]  0000ac2f          *   000000c0   
                 [ 0001585e ]  0000ac2f          *   00000047   fuzz.obj (.cinit)
                 [ 000158ec ]  0000ac76          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 00015946 ]  0000aca3          *   0000002a              : defs.obj (.cinit)
                 [ 0001599a ]  0000accd          *   0000000a              : _lock.obj (.cinit)
                 [ 000159ae ]  0000acd7          *   0000000a              : exit.obj (.cinit)
                 [ 000159c2 ]  0000ace1          *   00000005              : rand.obj (.cinit)
                 [ 000159cc ]  0000ace6          *   00000004              : fopen.obj (.cinit)
                 [ 000159d4 ]  0000acea          *   00000004              : memory.obj (.cinit)
                 [ 000159dc ]  0000acee          *   00000001   --HOLE-- [fill = 0]

.bss         0   [ 00024000 ]  00012000          *   000003e2   UNINITIALIZED
                 [ 00024000 ]  00012000          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 00024232 ]  00012119          *   00000001              : fopen.obj (.bss)
                 [ 00024234 ]  0001211a          *   000000f1   fuzz.obj (.bss)
                 [ 00024416 ]  0001220b          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 000245b6 ]  000122db          *   00000001   --HOLE--
                 [ 000245b8 ]  000122dc          *   00000084   C55CSL_3.lib : csl_intc.obj (.bss)
                 [ 000246c0 ]  00012360          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 000247a2 ]  000123d1          *   00000001   --HOLE--
                 [ 000247a4 ]  000123d2          *   00000006              : memory.obj (.bss)
                 [ 000247b0 ]  000123d8          *   00000004              : _lock.obj (.bss)
                 [ 000247b8 ]  000123dc          *   00000004              : exit.obj (.bss)
                 [ 000247c0 ]  000123e0          *   00000002              : rand.obj (.bss)

.data        0   [ 00030000 ]  00018000          *   00000000   UNINITIALIZED

.const       0   [ 00038000 ]  0001c000          *   0000028c   
                 [ 00038000 ]  0001c000          *   0000014b   fuzz.obj (.const:.string)
                 [ 00038296 ]  0001c14b          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)
                 [ 00038498 ]  0001c24c          *   00000024              : _printfi.obj (.const:.string)
                 [ 000384e0 ]  0001c270          *   0000000c              : _printfi.obj (.const)
                 [ 000384f8 ]  0001c27c          *   00000008              : divd.obj (.const:_initial_approx$1)
                 [ 00038508 ]  0001c284          *   00000003              : assert.obj (.const:.string)
                 [ 0003850e ]  0001c287          *   00000001   --HOLE-- [fill = 0]
                 [ 00038510 ]  0001c288          *   00000002              : fputs.obj (.const:.string)
                 [ 00038514 ]  0001c28a          *   00000002              : fltlid.obj (.const)

.switch      0   [ 0003c000 ]  0001e000          *   00000018   
                 [ 0003c000 ]  0001e000          *   00000018   fuzz.obj (.switch:_mutator)

.data_sandbox 
*            0   [ 00044000 ]  00022000          *   00000080   UNINITIALIZED
                 [ 00044000 ]  00022000          *   00000080   fuzz.obj (.data_sandbox)

.program_sandbox 
*            0   [ 00048000 ]  00024000          *   00000780   UNINITIALIZED
                 [ 00048000 ]  00024000          *   00000780   fuzz.obj (.program_sandbox)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
            00012000    .bss
            00018000    .data
00010000                .text
00015855                C$$EXIT
00014c62                C$$IO$$
000156cb                I$$DIV
000157f7                I$$LMPY
000156ea                I$$MOD
00015765                I$$UDIV
0001577a                I$$UMOD
00002500                RST
00013baa                _GPT_close
00013cb1                _GPT_config
00013c76                _GPT_getCnt
00013a6d                _GPT_open
00013b30                _GPT_reset
00013c1f                _GPT_start
00013c4c                _GPT_stop
000128f0                _HOSTclock
00012885                _HOSTclose
000127d0                _HOSTlseek
00012731                _HOSTopen
000126a4                _HOSTread
000125f6                _HOSTrename
00012598                _HOSTtime
0001252e                _HOSTunlink
000124a1                _HOSTwrite
000129d6                _IRQ_clear
00012a29                _IRQ_clearAll
00012a39                _IRQ_config
00012b46                _IRQ_disable
00012bc4                _IRQ_disableAll
00012bd2                _IRQ_enable
00012ccc                _IRQ_getArg
00012abe                _IRQ_getConfig
00012e10                _IRQ_globalDisable
00012e29                _IRQ_globalEnable
00012e42                _IRQ_globalRestore
0001294e                _IRQ_init
00012d41                _IRQ_map
00014e51                _IRQ_plug
00012c5c                _IRQ_restore
00012d10                _IRQ_setArg
00012d6d                _IRQ_setVecs
00012d9e                _IRQ_test
00002600                _Reset
00002500                _VECSTART
            00007000    __CIOBUF_
            00001080    __STACK_END
00002000                __STACK_SIZE
00006000                __SYSMEM_SIZE
00000400                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
            00012000    ___bss__
ffffffff                ___c_args__
            0000ac2f    ___cinit__
            00018000    ___data__
            00018000    ___edata__
            000123e2    ___end__
0001585e                ___etext__
000157b2                ___isinf
ffffffff                ___pinit__
00010000                ___text__
00015690                __abort_msg
00014235                __addd
000154a4                __args_main
000156c0                __assert
00013e79                __cleanup
            000123dc    __cleanup_ptr
00014621                __cmpd
            0001c14b    __ctypes_
0001330b                __divd
000156cb                __divi
00015584                __divli
00014200                __divlli
00015765                __divu
00014db0                __divul
0001410c                __divull
00014aeb                __doflush
            000123de    __dtors_ptr
000145ed                __eqld
0001573b                __fixdi
00015130                __fixdli
000152e4                __fltlid
00014fd5                __frcmpyd
0001504b                __frcmpyd_div
            00012118    __ft_end
            00012000    __ftable
000145a3                __geqd
00014558                __gtrd
0001450b                __leqd
            000123d8    __lock
000144c3                __lssd
000147dc                __mpyd
000157f7                __mpyli
00014054                __mpylli
0001568e                __nassert
0001582d                __negd
0001448f                __neqd
0001581a                __nop
00011362                __printfi
00014a8e                __rd_ok
00015812                __register_lock
0001580a                __register_unlock
000156ea                __remi
000154ef                __remli
00014025                __remlli
0001577a                __remu
000150be                __remul
00013fd7                __remull
000155cc                __setjmp
            00000080    __stack
000157e3                __subd
            00004000    __sys_memory
            00001080    __sysstack
            00012078    __tmpnams
            000123da    __unlock
00014a0e                __wrt_ok
00015854                _abort
00012336                _add_device
000153ab                _atoi
00015457                _auto_init
00011df6                _bubble_coverage
0001382d                _bus_error_isr
00015707                _c_int00
000132e5                _calloc
000132dd                _chkheap
000122c3                _close
            00012208    _count
            000121ee    _cov_function_enter
00014d0d                _coverage_log
            0001211e    _coverage_map
            000121e6    _coverage_map_head
            00012204    _cpuCycleCount
000115a4                _crash_void
            0001211c    _current_input
            0001211a    _current_seed_num
0001394d                _data_log_isr
00011d43                _dequeue_seed
00015650                _exit
00014f5a                _fclose
00014b54                _fflush
000122ba                _find_registered_device
00013f9c                _fopen
0001553a                _fprintf
00014c67                _fputc
00014679                _fputs
00012e56                _free
00013287                _free_memory
00013ed3                _freopen
00015279                _fseek
000136d7                _fuzzer_isr
00012426                _getenv
            000121ef    _isIncreasing
            0001220a    _isTest
            00012202    _iterations
            00024000    _local_pool
000155ed                _longjmp
00012254                _lseek
00014edd                _ltoa
00011ed8                _main
00011dff                _main_harness_loop
00012f87                _malloc
0001322d                _max_free
0001578f                _memccpy
00015611                _memcpy
0001581c                _memset
00012f22                _minit
            00012203    _mutation_degression
000116f9                _mutator
00012195                _open
            00022000    _output_buffer
            00012201    _pool_loops
00015407                _printf
00014c67                _putc
00014cfe                _putchar
000147ae                _puts
0001536d                _rand
000120e7                _read
0001520c                _readmsg
0001307c                _realloc
0001584a                _remove
000120b1                _remove_device
00012058                _rename
            000121e8    _retVal
            0001211b    _return_address
            000121f0    _saved_context
            000121ec    _seed_head
            000121e9    _seed_number
            000121ed    _seed_tail
000155cc                _setjmp
00011676                _setup
00014928                _setvbuf
0001534b                _srand
            00012200    _stage_cycles
000115a6                _start_timer
00011649                _stop_timer
            000121ea    _sut_start_address
            00012206    _sysClk
0001583d                _test
000157cc                _time
00012025                _unlink
00011ee3                _write
00014bad                _writemsg
ffffffff                binit
            0000ac2f    cinit
            00018000    edata
            000123e2    end
0001585e                etext
ffffffff                pinit


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000080    __stack
00000400                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001080    __STACK_END
            00001080    __sysstack
00002500                RST
00002500                _VECSTART
00002600                _Reset
00006000                __SYSMEM_SIZE
            00004000    __sys_memory
            00007000    __CIOBUF_
00010000                .text
00010000                ___text__
00011362                __printfi
000115a4                _crash_void
000115a6                _start_timer
00011649                _stop_timer
00011676                _setup
000116f9                _mutator
00011d43                _dequeue_seed
00011df6                _bubble_coverage
00011dff                _main_harness_loop
00011ed8                _main
00011ee3                _write
00012025                _unlink
00012058                _rename
000120b1                _remove_device
000120e7                _read
00012195                _open
00012254                _lseek
000122ba                _find_registered_device
000122c3                _close
00012336                _add_device
00012426                _getenv
000124a1                _HOSTwrite
0001252e                _HOSTunlink
00012598                _HOSTtime
000125f6                _HOSTrename
000126a4                _HOSTread
00012731                _HOSTopen
000127d0                _HOSTlseek
00012885                _HOSTclose
000128f0                _HOSTclock
0001294e                _IRQ_init
000129d6                _IRQ_clear
00012a29                _IRQ_clearAll
00012a39                _IRQ_config
00012abe                _IRQ_getConfig
00012b46                _IRQ_disable
00012bc4                _IRQ_disableAll
00012bd2                _IRQ_enable
00012c5c                _IRQ_restore
00012ccc                _IRQ_getArg
00012d10                _IRQ_setArg
00012d41                _IRQ_map
00012d6d                _IRQ_setVecs
00012d9e                _IRQ_test
00012e10                _IRQ_globalDisable
00012e29                _IRQ_globalEnable
00012e42                _IRQ_globalRestore
00012e56                _free
00012f22                _minit
00012f87                _malloc
0001307c                _realloc
0001322d                _max_free
00013287                _free_memory
000132dd                _chkheap
000132e5                _calloc
0001330b                __divd
000136d7                _fuzzer_isr
0001382d                _bus_error_isr
0001394d                _data_log_isr
00013a6d                _GPT_open
00013b30                _GPT_reset
00013baa                _GPT_close
00013c1f                _GPT_start
00013c4c                _GPT_stop
00013c76                _GPT_getCnt
00013cb1                _GPT_config
00013e79                __cleanup
00013ed3                _freopen
00013f9c                _fopen
00013fd7                __remull
00014025                __remlli
00014054                __mpylli
0001410c                __divull
00014200                __divlli
00014235                __addd
0001448f                __neqd
000144c3                __lssd
0001450b                __leqd
00014558                __gtrd
000145a3                __geqd
000145ed                __eqld
00014621                __cmpd
00014679                _fputs
000147ae                _puts
000147dc                __mpyd
00014928                _setvbuf
00014a0e                __wrt_ok
00014a8e                __rd_ok
00014aeb                __doflush
00014b54                _fflush
00014bad                _writemsg
00014c62                C$$IO$$
00014c67                _fputc
00014c67                _putc
00014cfe                _putchar
00014d0d                _coverage_log
00014db0                __divul
00014e51                _IRQ_plug
00014edd                _ltoa
00014f5a                _fclose
00014fd5                __frcmpyd
0001504b                __frcmpyd_div
000150be                __remul
00015130                __fixdli
0001520c                _readmsg
00015279                _fseek
000152e4                __fltlid
0001534b                _srand
0001536d                _rand
000153ab                _atoi
00015407                _printf
00015457                _auto_init
000154a4                __args_main
000154ef                __remli
0001553a                _fprintf
00015584                __divli
000155cc                __setjmp
000155cc                _setjmp
000155ed                _longjmp
00015611                _memcpy
00015650                _exit
0001568e                __nassert
00015690                __abort_msg
000156c0                __assert
000156cb                I$$DIV
000156cb                __divi
000156ea                I$$MOD
000156ea                __remi
00015707                _c_int00
0001573b                __fixdi
00015765                I$$UDIV
00015765                __divu
0001577a                I$$UMOD
0001577a                __remu
0001578f                _memccpy
000157b2                ___isinf
000157cc                _time
000157e3                __subd
000157f7                I$$LMPY
000157f7                __mpyli
0001580a                __register_unlock
00015812                __register_lock
0001581a                __nop
0001581c                _memset
0001582d                __negd
0001583d                _test
0001584a                _remove
00015854                _abort
00015855                C$$EXIT
            0000ac2f    ___cinit__
0001585e                ___etext__
            0000ac2f    cinit
0001585e                etext
            00012000    .bss
            00012000    ___bss__
            00012000    __ftable
            00012078    __tmpnams
            00012118    __ft_end
            0001211a    _current_seed_num
            0001211b    _return_address
            0001211c    _current_input
            0001211e    _coverage_map
            000121e6    _coverage_map_head
            000121e8    _retVal
            000121e9    _seed_number
            000121ea    _sut_start_address
            000121ec    _seed_head
            000121ed    _seed_tail
            000121ee    _cov_function_enter
            000121ef    _isIncreasing
            000121f0    _saved_context
            00012200    _stage_cycles
            00012201    _pool_loops
            00012202    _iterations
            00012203    _mutation_degression
            00012204    _cpuCycleCount
            00012206    _sysClk
            00012208    _count
            0001220a    _isTest
            000123d8    __lock
            000123da    __unlock
            000123dc    __cleanup_ptr
            000123de    __dtors_ptr
            000123e2    ___end__
            000123e2    end
            00018000    .data
            00018000    ___data__
            00018000    ___edata__
            00018000    edata
            0001c14b    __ctypes_
            00022000    _output_buffer
            00024000    _local_pool
ffffffff                ___binit__
ffffffff                ___c_args__
ffffffff                ___pinit__
ffffffff                binit
ffffffff                pinit

[214 symbols]
